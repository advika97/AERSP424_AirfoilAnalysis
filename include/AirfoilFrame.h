#ifndef __AirfoilFrame__
#define __AirfoilFrame__

/**
@file
Subclass of AirfoilFrameGUI, which is generated by wxFormBuilder.
*/

#include "FrameGUI.h"
#include "Region.h"
#include "Canvas.h"
#include <mathplot.h>

//// end generated include

/** Implementing AirfoilFrameGUI */
class AirfoilFrame : public AirfoilFrameGUI
{
	public:
		/** Constructor */
		AirfoilFrame( wxWindow* parent );
	//// end generated class members
		~AirfoilFrame();
	    void simulate();
	    void update();
		void samplePlot1();
        void samplePlot2();
        void samplePlot3();

	    shared_ptr<Region> region;
	//    shared_ptr<Canvas> canvas;
	    Canvas *canvas;
	
	    wxTimer *m_timer;
		mpWindow* m_plot1;
        mpWindow* m_plot2;
        mpWindow* m_plot3;
		mpInfoCoords* nfo; // mpInfoLayer* nfo;

	protected:
		// Handlers for AirfoilFrameGUI events.
		void OnClose( wxCloseEvent& event );
		void onStartButtonClick( wxCommandEvent& event );
		void onCheckBoxChecked( wxCommandEvent& event );
		//void onPropertyGridChanged( wxPropertyGridEvent& event );
		void OnGeometryChanged(wxCommandEvent& event);
		void OnStreamlinesChecked(wxCommandEvent& event);
		void OnVelocitiesChecked(wxCommandEvent& event);
		void OnPressureChecked(wxCommandEvent& event);
		void OnSmokeChecked(wxCommandEvent& event);
		void OnOverRelaxationChecked(wxCommandEvent& event);
		void OnMediumChanged(wxCommandEvent& event);

	private:
		/*
	    void OnCasePropertyChanged(int value);
	    void OnGeometryPropertyChanged(int value);
	    void OnScalarPropertyChanged(int value);
	    void OnGeometryPositionPropertyChanged(bool value);
	    void OnTracerPropertyChanged(bool value);
	    void OnStreamlinesPropertyChanged(bool value);
	    void OnVelocityVectorsPropertyChanged(bool value);
	    void OnDensityPropertyChanged(double value);
	    void OnOverrelaxationPropertyChanged(double value);
	    void OnResolutionPropertyChanged(int value);
	    void OnNumThreadsPropertyChanged(int value);
		*/
		void setDafaultsForMedium(int _regionNr);
	private:	
	    bool compute;
};

#endif // __AirfoilFrame__
